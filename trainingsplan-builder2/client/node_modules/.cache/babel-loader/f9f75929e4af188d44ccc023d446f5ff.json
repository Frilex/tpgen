{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\tpgen\\\\trainingsplan-builder2\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DndContext } from '@dnd-kit/core';\nimport Sidebar_Blocks from './components/blocks/Sidebar_Blocks';\nimport DropArea from './components/blocks/DropArea';\nimport Sidebar_SavedUnits from './components/units/Sidebar_SavedUnits';\nimport Mainbar from './components/Mainbar';\nimport { createNewBlock, addBlockToTree, deleteBlockFromTree, moveBlockInTree, updateBlockOptionsInTree, computeSums } from './utils/blockUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableBlocks = [{\n  id: 'aufwaermen',\n  label: 'Aufwärmen',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'tempolauf',\n  label: 'Tempolauf',\n  options: {\n    dropdown: ['1RT', '3RT', '5RT', '10RT', 'HMRT', 'MRT'],\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'dauerlauf',\n  label: 'Dauerlauf',\n  options: {\n    dropdown: ['Zone 1', 'Zone 2', 'Zone 3', 'Zone 4', 'Zone 5'],\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'gehpause',\n  label: 'Gehpause',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'trabpause',\n  label: 'Trabpause',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'abkuehlung',\n  label: 'Abkühlung',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'wiederholung',\n  label: 'Wiederholung',\n  options: {\n    repetitions: 1\n  }\n}];\nfunction App() {\n  _s();\n  const [droppedBlocks, setDroppedBlocks] = useState([]);\n  const [instanceCounter, setInstanceCounter] = useState(0);\n  const [unitName, setUnitName] = useState('');\n  const [unitKuerzel, setUnitKuerzel] = useState('');\n  const [savedUnits, setSavedUnits] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/trainingUnits').then(res => res.json()).then(data => setSavedUnits(data)).catch(err => console.error(err));\n  }, []);\n  const handleDragEnd = event => {\n    const {\n      over,\n      active\n    } = event;\n    if (!over) return;\n    const dropAreaId = over.id;\n    let parentId = null;\n    if (dropAreaId !== 'drop-area') {\n      parentId = dropAreaId.replace('drop-area-', '');\n    }\n    const newInstanceId = `inst-${instanceCounter}`;\n    const newBlock = createNewBlock(active.data.current.block, newInstanceId);\n    setDroppedBlocks(prev => addBlockToTree(prev, parentId, newBlock));\n    setInstanceCounter(prev => prev + 1);\n  };\n  const handleDelete = instanceId => {\n    setDroppedBlocks(prev => deleteBlockFromTree(prev, instanceId));\n  };\n  const handleMove = (instanceId, direction) => {\n    setDroppedBlocks(prev => moveBlockInTree(prev, instanceId, direction));\n  };\n  const handleUpdateOptions = (instanceId, newOptions) => {\n    setDroppedBlocks(prev => updateBlockOptionsInTree(prev, instanceId, newOptions));\n  };\n  const sums = computeSums(droppedBlocks);\n  const sumText = `(${sums.distance}km + ${sums.time}min)`;\n  const handleKuerzelChange = e => {\n    setUnitKuerzel(e.target.value.replace(/\\s/g, ''));\n  };\n  const handleSave = async () => {\n    const trainingUnit = {\n      name: unitName,\n      kuerzel: unitKuerzel,\n      blocks: droppedBlocks\n    };\n    try {\n      let res = await fetch('http://localhost:3001/trainingUnits', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(trainingUnit)\n      });\n      if (res.status === 409) {\n        const data = await res.json();\n        if (window.confirm('Eine Einheit mit diesem Kürzel existiert bereits. Überschreiben?')) {\n          res = await fetch(`http://localhost:3001/trainingUnits/${data.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(trainingUnit)\n          });\n          if (!res.ok) {\n            alert('Fehler beim Überschreiben.');\n            return;\n          }\n          alert('Trainingseinheit überschrieben!');\n        } else {\n          return;\n        }\n      } else if (!res.ok) {\n        alert('Fehler beim Speichern.');\n        return;\n      } else {\n        alert('Trainingseinheit gespeichert!');\n      }\n      const updated = await fetch('http://localhost:3001/trainingUnits');\n      const data = await updated.json();\n      setSavedUnits(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleLoad = unit => {\n    setDroppedBlocks(unit.blocks);\n    setUnitName(unit.name);\n    setUnitKuerzel(unit.kuerzel);\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar_SavedUnits, {\n        savedUnits: savedUnits,\n        onLoad: handleLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"main-title\",\n          children: [\"Trainingseinheit \", sumText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unit-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: unitName,\n              onChange: e => setUnitName(e.target.value),\n              className: \"info-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"K\\xFCrzel:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: unitKuerzel,\n              onChange: handleKuerzelChange,\n              className: \"info-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"save-button\",\n            children: \"Speichern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropArea, {\n          blocks: droppedBlocks,\n          parentId: null,\n          onDelete: handleDelete,\n          onMove: handleMove,\n          onUpdateOptions: handleUpdateOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar_Blocks, {\n        availableBlocks: availableBlocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yFFnkv8Doz1m55fHePvF/9eT31Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DndContext","Sidebar_Blocks","DropArea","Sidebar_SavedUnits","Mainbar","createNewBlock","addBlockToTree","deleteBlockFromTree","moveBlockInTree","updateBlockOptionsInTree","computeSums","jsxDEV","_jsxDEV","availableBlocks","id","label","options","type","unitOptions","dropdown","repetitions","App","_s","droppedBlocks","setDroppedBlocks","instanceCounter","setInstanceCounter","unitName","setUnitName","unitKuerzel","setUnitKuerzel","savedUnits","setSavedUnits","fetch","then","res","json","data","catch","err","console","error","handleDragEnd","event","over","active","dropAreaId","parentId","replace","newInstanceId","newBlock","current","block","prev","handleDelete","instanceId","handleMove","direction","handleUpdateOptions","newOptions","sums","sumText","distance","time","handleKuerzelChange","e","target","value","handleSave","trainingUnit","name","kuerzel","blocks","method","headers","body","JSON","stringify","status","window","confirm","ok","alert","updated","handleLoad","unit","onDragEnd","children","className","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","onDelete","onMove","onUpdateOptions","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Documents/tpgen/trainingsplan-builder2/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DndContext } from '@dnd-kit/core';\r\nimport Sidebar_Blocks from './components/blocks/Sidebar_Blocks';\r\nimport DropArea from './components/blocks/DropArea';\r\nimport Sidebar_SavedUnits from './components/units/Sidebar_SavedUnits';\r\nimport Mainbar from './components/Mainbar';\r\nimport { createNewBlock, addBlockToTree, deleteBlockFromTree, moveBlockInTree, updateBlockOptionsInTree, computeSums } from './utils/blockUtils';\r\n\r\nconst availableBlocks = [\r\n  { id: 'aufwaermen', label: 'Aufwärmen', options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } },\r\n  { id: 'tempolauf', label: 'Tempolauf', options: { dropdown: ['1RT', '3RT', '5RT', '10RT', 'HMRT', 'MRT'], unitOptions: [\"Distanz\", \"Zeit\"] } },\r\n  { id: 'dauerlauf', label: 'Dauerlauf', options: { dropdown: ['Zone 1', 'Zone 2', 'Zone 3', 'Zone 4', 'Zone 5'], unitOptions: [\"Distanz\", \"Zeit\"] } },\r\n  { id: 'gehpause', label: 'Gehpause', options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } },\r\n  { id: 'trabpause', label: 'Trabpause', options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } },\r\n  { id: 'abkuehlung', label: 'Abkühlung', options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } },\r\n  { id: 'wiederholung', label: 'Wiederholung', options: { repetitions: 1 } }\r\n];\r\n\r\nfunction App() {\r\n  const [droppedBlocks, setDroppedBlocks] = useState([]);\r\n  const [instanceCounter, setInstanceCounter] = useState(0);\r\n  const [unitName, setUnitName] = useState('');\r\n  const [unitKuerzel, setUnitKuerzel] = useState('');\r\n  const [savedUnits, setSavedUnits] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/trainingUnits')\r\n      .then(res => res.json())\r\n      .then(data => setSavedUnits(data))\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  const handleDragEnd = (event) => {\r\n    const { over, active } = event;\r\n    if (!over) return;\r\n    const dropAreaId = over.id;\r\n    let parentId = null;\r\n    if (dropAreaId !== 'drop-area') {\r\n      parentId = dropAreaId.replace('drop-area-', '');\r\n    }\r\n    const newInstanceId = `inst-${instanceCounter}`;\r\n    const newBlock = createNewBlock(active.data.current.block, newInstanceId);\r\n    setDroppedBlocks(prev => addBlockToTree(prev, parentId, newBlock));\r\n    setInstanceCounter(prev => prev + 1);\r\n  };\r\n\r\n  const handleDelete = (instanceId) => {\r\n    setDroppedBlocks(prev => deleteBlockFromTree(prev, instanceId));\r\n  };\r\n\r\n  const handleMove = (instanceId, direction) => {\r\n    setDroppedBlocks(prev => moveBlockInTree(prev, instanceId, direction));\r\n  };\r\n\r\n  const handleUpdateOptions = (instanceId, newOptions) => {\r\n    setDroppedBlocks(prev => updateBlockOptionsInTree(prev, instanceId, newOptions));\r\n  };\r\n\r\n  const sums = computeSums(droppedBlocks);\r\n  const sumText = `(${sums.distance}km + ${sums.time}min)`;\r\n\r\n  const handleKuerzelChange = (e) => {\r\n    setUnitKuerzel(e.target.value.replace(/\\s/g, ''));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const trainingUnit = {\r\n      name: unitName,\r\n      kuerzel: unitKuerzel,\r\n      blocks: droppedBlocks\r\n    };\r\n    try {\r\n      let res = await fetch('http://localhost:3001/trainingUnits', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(trainingUnit)\r\n      });\r\n      if (res.status === 409) {\r\n        const data = await res.json();\r\n        if (window.confirm('Eine Einheit mit diesem Kürzel existiert bereits. Überschreiben?')) {\r\n          res = await fetch(`http://localhost:3001/trainingUnits/${data.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(trainingUnit)\r\n          });\r\n          if (!res.ok) {\r\n            alert('Fehler beim Überschreiben.');\r\n            return;\r\n          }\r\n          alert('Trainingseinheit überschrieben!');\r\n        } else {\r\n          return;\r\n        }\r\n      } else if (!res.ok) {\r\n        alert('Fehler beim Speichern.');\r\n        return;\r\n      } else {\r\n        alert('Trainingseinheit gespeichert!');\r\n      }\r\n      const updated = await fetch('http://localhost:3001/trainingUnits');\r\n      const data = await updated.json();\r\n      setSavedUnits(data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const handleLoad = (unit) => {\r\n    setDroppedBlocks(unit.blocks);\r\n    setUnitName(unit.name);\r\n    setUnitKuerzel(unit.kuerzel);\r\n  };\r\n\r\n  return (\r\n    <DndContext onDragEnd={handleDragEnd}>\r\n      <div className=\"app-container\">\r\n        <Sidebar_SavedUnits savedUnits={savedUnits} onLoad={handleLoad} />\r\n        \r\n        <div className=\"middle-panel\">\r\n          <h3 className=\"main-title\">\r\n            Trainingseinheit {sumText}\r\n          </h3>\r\n          <div className=\"unit-info\">\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                value={unitName}\r\n                onChange={(e) => setUnitName(e.target.value)}\r\n                className=\"info-input\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Kürzel:\r\n              <input\r\n                type=\"text\"\r\n                value={unitKuerzel}\r\n                onChange={handleKuerzelChange}\r\n                className=\"info-input\"\r\n              />\r\n            </label>\r\n            <button onClick={handleSave} className=\"save-button\">\r\n              Speichern\r\n            </button>\r\n          </div>\r\n          <DropArea \r\n            blocks={droppedBlocks} \r\n            parentId={null}\r\n            onDelete={handleDelete}\r\n            onMove={handleMove}\r\n            onUpdateOptions={handleUpdateOptions}\r\n          />\r\n        </div>\r\n        <Sidebar_Blocks availableBlocks={availableBlocks} />\r\n      </div>\r\n    </DndContext>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}