{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\tpgen\\\\trainingsplan-builder2\\\\client\\\\src\\\\components\\\\blocks\\\\Mainbar.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleDragEnd = event => {\n  const {\n    over,\n    active\n  } = event;\n  if (!over) return;\n  const dropAreaId = over.id;\n  let parentId = null;\n  if (dropAreaId !== 'drop-area') {\n    parentId = dropAreaId.replace('drop-area-', '');\n  }\n  const newInstanceId = `inst-${instanceCounter}`;\n  const newBlock = createNewBlock(active.data.current.block, newInstanceId);\n  setDroppedBlocks(prev => addBlockToTree(prev, parentId, newBlock));\n  setInstanceCounter(prev => prev + 1);\n};\nconst handleDelete = instanceId => {\n  setDroppedBlocks(prev => deleteBlockFromTree(prev, instanceId));\n};\nconst handleMove = (instanceId, direction) => {\n  setDroppedBlocks(prev => moveBlockInTree(prev, instanceId, direction));\n};\nconst handleUpdateOptions = (instanceId, newOptions) => {\n  setDroppedBlocks(prev => updateBlockOptionsInTree(prev, instanceId, newOptions));\n};\nconst sums = computeSums(droppedBlocks);\nconst sumText = `(${sums.distance}km + ${sums.time}min)`;\nconst handleKuerzelChange = e => {\n  setUnitKuerzel(e.target.value.replace(/\\s/g, ''));\n};\nconst handleSave = async () => {\n  const trainingUnit = {\n    name: unitName,\n    kuerzel: unitKuerzel,\n    blocks: droppedBlocks\n  };\n  try {\n    let res = await fetch('http://localhost:3001/trainingUnits', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(trainingUnit)\n    });\n    if (res.status === 409) {\n      const data = await res.json();\n      if (window.confirm('Eine Einheit mit diesem Kürzel existiert bereits. Überschreiben?')) {\n        res = await fetch(`http://localhost:3001/trainingUnits/${data.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(trainingUnit)\n        });\n        if (!res.ok) {\n          alert('Fehler beim Überschreiben.');\n          return;\n        }\n        alert('Trainingseinheit überschrieben!');\n      } else {\n        return;\n      }\n    } else if (!res.ok) {\n      alert('Fehler beim Speichern.');\n      return;\n    } else {\n      alert('Trainingseinheit gespeichert!');\n    }\n    const updated = await fetch('http://localhost:3001/trainingUnits');\n    const data = await updated.json();\n    setSavedUnits(data);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nconst handleLoad = unit => {\n  setDroppedBlocks(unit.blocks);\n  setUnitName(unit.name);\n  setUnitKuerzel(unit.kuerzel);\n};\nfunction Mainbar({}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"middle-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"main-title\",\n      children: [\"Trainingseinheit \", sumText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unit-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: unitName,\n          onChange: e => setUnitName(e.target.value),\n          className: \"info-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"K\\xFCrzel:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: unitKuerzel,\n          onChange: handleKuerzelChange,\n          className: \"info-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"save-button\",\n        children: \"Speichern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DropArea, {\n      blocks: droppedBlocks,\n      parentId: null,\n      onDelete: handleDelete,\n      onMove: handleMove,\n      onUpdateOptions: handleUpdateOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_c = Mainbar;\nexport default Mainbar;\nvar _c;\n$RefreshReg$(_c, \"Mainbar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","handleDragEnd","event","over","active","dropAreaId","id","parentId","replace","newInstanceId","instanceCounter","newBlock","createNewBlock","data","current","block","setDroppedBlocks","prev","addBlockToTree","setInstanceCounter","handleDelete","instanceId","deleteBlockFromTree","handleMove","direction","moveBlockInTree","handleUpdateOptions","newOptions","updateBlockOptionsInTree","sums","computeSums","droppedBlocks","sumText","distance","time","handleKuerzelChange","e","setUnitKuerzel","target","value","handleSave","trainingUnit","name","unitName","kuerzel","unitKuerzel","blocks","res","fetch","method","headers","body","JSON","stringify","status","json","window","confirm","ok","alert","updated","setSavedUnits","error","console","handleLoad","unit","setUnitName","Mainbar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","DropArea","onDelete","onMove","onUpdateOptions","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Documents/tpgen/trainingsplan-builder2/client/src/components/blocks/Mainbar.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst handleDragEnd = (event) => {\r\n    const { over, active } = event;\r\n    if (!over) return;\r\n    const dropAreaId = over.id;\r\n    let parentId = null;\r\n    if (dropAreaId !== 'drop-area') {\r\n      parentId = dropAreaId.replace('drop-area-', '');\r\n    }\r\n    const newInstanceId = `inst-${instanceCounter}`;\r\n    const newBlock = createNewBlock(active.data.current.block, newInstanceId);\r\n    setDroppedBlocks(prev => addBlockToTree(prev, parentId, newBlock));\r\n    setInstanceCounter(prev => prev + 1);\r\n  };\r\n\r\n  const handleDelete = (instanceId) => {\r\n    setDroppedBlocks(prev => deleteBlockFromTree(prev, instanceId));\r\n  };\r\n\r\n  const handleMove = (instanceId, direction) => {\r\n    setDroppedBlocks(prev => moveBlockInTree(prev, instanceId, direction));\r\n  };\r\n\r\n  const handleUpdateOptions = (instanceId, newOptions) => {\r\n    setDroppedBlocks(prev => updateBlockOptionsInTree(prev, instanceId, newOptions));\r\n  };\r\n\r\n  const sums = computeSums(droppedBlocks);\r\n  const sumText = `(${sums.distance}km + ${sums.time}min)`;\r\n\r\n  const handleKuerzelChange = (e) => {\r\n    setUnitKuerzel(e.target.value.replace(/\\s/g, ''));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const trainingUnit = {\r\n      name: unitName,\r\n      kuerzel: unitKuerzel,\r\n      blocks: droppedBlocks\r\n    };\r\n    try {\r\n      let res = await fetch('http://localhost:3001/trainingUnits', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(trainingUnit)\r\n      });\r\n      if (res.status === 409) {\r\n        const data = await res.json();\r\n        if (window.confirm('Eine Einheit mit diesem Kürzel existiert bereits. Überschreiben?')) {\r\n          res = await fetch(`http://localhost:3001/trainingUnits/${data.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(trainingUnit)\r\n          });\r\n          if (!res.ok) {\r\n            alert('Fehler beim Überschreiben.');\r\n            return;\r\n          }\r\n          alert('Trainingseinheit überschrieben!');\r\n        } else {\r\n          return;\r\n        }\r\n      } else if (!res.ok) {\r\n        alert('Fehler beim Speichern.');\r\n        return;\r\n      } else {\r\n        alert('Trainingseinheit gespeichert!');\r\n      }\r\n      const updated = await fetch('http://localhost:3001/trainingUnits');\r\n      const data = await updated.json();\r\n      setSavedUnits(data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const handleLoad = (unit) => {\r\n    setDroppedBlocks(unit.blocks);\r\n    setUnitName(unit.name);\r\n    setUnitKuerzel(unit.kuerzel);\r\n  };\r\n\r\nfunction Mainbar({ }) {\r\n  return (\r\n    <div className=\"middle-panel\">\r\n          <h3 className=\"main-title\">\r\n            Trainingseinheit {sumText}\r\n          </h3>\r\n          <div className=\"unit-info\">\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                value={unitName}\r\n                onChange={(e) => setUnitName(e.target.value)}\r\n                className=\"info-input\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Kürzel:\r\n              <input\r\n                type=\"text\"\r\n                value={unitKuerzel}\r\n                onChange={handleKuerzelChange}\r\n                className=\"info-input\"\r\n              />\r\n            </label>\r\n            <button onClick={handleSave} className=\"save-button\">\r\n              Speichern\r\n            </button>\r\n          </div>\r\n          <DropArea \r\n            blocks={droppedBlocks} \r\n            parentId={null}\r\n            onDelete={handleDelete}\r\n            onMove={handleMove}\r\n            onUpdateOptions={handleUpdateOptions}\r\n          />\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Mainbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}