{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\tpgen\\\\trainingsplan-builder2\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DndContext } from '@dnd-kit/core';\nimport Sidebar from './components/Sidebar';\nimport DropArea from './components/DropArea';\nimport SavedUnits from './components/SavedUnits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableBlocks = [{\n  id: 'aufwaermen',\n  label: 'Aufwärmen',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'tempolauf',\n  label: 'Tempolauf',\n  options: {\n    dropdown: ['1RT', '3RT', '5RT', '10RT', 'HMRT', 'MRT'],\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'dauerlauf',\n  label: 'Dauerlauf',\n  options: {\n    dropdown: ['Zone 1', 'Zone 2', 'Zone 3', 'Zone 4', 'Zone 5'],\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'gehpause',\n  label: 'Gehpause',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'trabpause',\n  label: 'Trabpause',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'abkuehlung',\n  label: 'Abkühlung',\n  options: {\n    type: 'switch',\n    unitOptions: [\"Distanz\", \"Zeit\"]\n  }\n}, {\n  id: 'wiederholung',\n  label: 'Wiederholung',\n  options: {\n    repetitions: 1\n  }\n}];\nfunction createNewBlock(block, instanceId) {\n  let newOptions = {};\n  if (['aufwaermen', 'gehpause', 'trabpause', 'abkuehlung'].includes(block.id)) {\n    newOptions = {\n      selectedUnit: \"Distanz\",\n      value: '',\n      unitOptions: [\"Distanz\", \"Zeit\"],\n      notiz: ''\n    };\n  } else if (block.id === 'tempolauf') {\n    newOptions = {\n      selectedDropdown: block.options.dropdown[0],\n      selectedUnit: \"Distanz\",\n      value: '',\n      dropdown: block.options.dropdown,\n      unitOptions: [\"Distanz\", \"Zeit\"],\n      notiz: ''\n    };\n  } else if (block.id === 'dauerlauf') {\n    newOptions = {\n      selectedDropdown: block.options.dropdown[0],\n      selectedUnit: \"Distanz\",\n      value: '',\n      dropdown: block.options.dropdown,\n      unitOptions: [\"Distanz\", \"Zeit\"],\n      notiz: ''\n    };\n  } else if (block.id === 'wiederholung') {\n    newOptions = {\n      repetitions: block.options.repetitions,\n      notiz: ''\n    };\n  }\n  return {\n    ...block,\n    instanceId,\n    options: newOptions,\n    ...(block.id === 'wiederholung' ? {\n      children: []\n    } : {})\n  };\n}\nfunction addBlockToTree(blocks, parentId, newBlock) {\n  if (parentId === null) {\n    return [...blocks, newBlock];\n  }\n  return blocks.map(b => {\n    if (b.instanceId === parentId && b.id === 'wiederholung') {\n      return {\n        ...b,\n        children: [...(b.children || []), newBlock]\n      };\n    } else if (b.children) {\n      return {\n        ...b,\n        children: addBlockToTree(b.children, parentId, newBlock)\n      };\n    }\n    return b;\n  });\n}\nfunction deleteBlockFromTree(blocks, instanceId) {\n  return blocks.filter(b => b.instanceId !== instanceId).map(b => {\n    if (b.children) {\n      return {\n        ...b,\n        children: deleteBlockFromTree(b.children, instanceId)\n      };\n    }\n    return b;\n  });\n}\nfunction moveBlockInArray(arr, instanceId, direction) {\n  const index = arr.findIndex(b => b.instanceId === instanceId);\n  if (index === -1) return arr;\n  const newIndex = index + direction;\n  if (newIndex < 0 || newIndex >= arr.length) return arr;\n  const newArr = [...arr];\n  [newArr[index], newArr[newIndex]] = [newArr[newIndex], newArr[index]];\n  return newArr;\n}\nfunction moveBlockInTree(blocks, instanceId, direction) {\n  const index = blocks.findIndex(b => b.instanceId === instanceId);\n  if (index !== -1) {\n    return moveBlockInArray(blocks, instanceId, direction);\n  }\n  return blocks.map(b => {\n    if (b.children) {\n      return {\n        ...b,\n        children: moveBlockInTree(b.children, instanceId, direction)\n      };\n    }\n    return b;\n  });\n}\nfunction updateBlockOptionsInTree(blocks, instanceId, newOptions) {\n  return blocks.map(b => {\n    if (b.instanceId === instanceId) {\n      return {\n        ...b,\n        options: {\n          ...b.options,\n          ...newOptions\n        }\n      };\n    }\n    if (b.children) {\n      return {\n        ...b,\n        children: updateBlockOptionsInTree(b.children, instanceId, newOptions)\n      };\n    }\n    return b;\n  });\n}\nfunction computeSums(blocks) {\n  let distance = 0,\n    time = 0;\n  blocks.forEach(block => {\n    if (block.id === 'wiederholung') {\n      const reps = block.options.repetitions || 1;\n      const childSums = computeSums(block.children || []);\n      distance += childSums.distance * reps;\n      time += childSums.time * reps;\n    } else {\n      const val = parseFloat(block.options.value) || 0;\n      if (block.options.selectedUnit === \"Distanz\") {\n        distance += val;\n      } else if (block.options.selectedUnit === \"Zeit\") {\n        time += val;\n      }\n    }\n  });\n  return {\n    distance,\n    time\n  };\n}\nfunction App() {\n  _s();\n  const [droppedBlocks, setDroppedBlocks] = useState([]);\n  const [instanceCounter, setInstanceCounter] = useState(0);\n  const [unitName, setUnitName] = useState('');\n  const [unitKuerzel, setUnitKuerzel] = useState('');\n  const [savedUnits, setSavedUnits] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/trainingUnits').then(res => res.json()).then(data => setSavedUnits(data)).catch(err => console.error(err));\n  }, []);\n  const handleDragEnd = event => {\n    const {\n      over,\n      active\n    } = event;\n    if (!over) return;\n    const dropAreaId = over.id;\n    let parentId = null;\n    if (dropAreaId !== 'drop-area') {\n      parentId = dropAreaId.replace('drop-area-', '');\n    }\n    const newInstanceId = `inst-${instanceCounter}`;\n    const newBlock = createNewBlock(active.data.current.block, newInstanceId);\n    setDroppedBlocks(prev => addBlockToTree(prev, parentId, newBlock));\n    setInstanceCounter(prev => prev + 1);\n  };\n  const handleDelete = instanceId => {\n    setDroppedBlocks(prev => deleteBlockFromTree(prev, instanceId));\n  };\n  const handleMove = (instanceId, direction) => {\n    setDroppedBlocks(prev => moveBlockInTree(prev, instanceId, direction));\n  };\n  const handleUpdateOptions = (instanceId, newOptions) => {\n    setDroppedBlocks(prev => updateBlockOptionsInTree(prev, instanceId, newOptions));\n  };\n  const sums = computeSums(droppedBlocks);\n  const sumText = `(${sums.distance}km + ${sums.time}min)`;\n  const handleKuerzelChange = e => {\n    setUnitKuerzel(e.target.value.replace(/\\s/g, ''));\n  };\n  const handleSave = async () => {\n    const trainingUnit = {\n      name: unitName,\n      kuerzel: unitKuerzel,\n      blocks: droppedBlocks\n    };\n    try {\n      let res = await fetch('http://localhost:3001/trainingUnits', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(trainingUnit)\n      });\n      if (res.status === 409) {\n        const data = await res.json();\n        if (window.confirm('Eine Einheit mit diesem Kürzel existiert bereits. Überschreiben?')) {\n          res = await fetch(`http://localhost:3001/trainingUnits/${data.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(trainingUnit)\n          });\n          if (!res.ok) {\n            alert('Fehler beim Überschreiben.');\n            return;\n          }\n          alert('Trainingseinheit überschrieben!');\n        } else {\n          return;\n        }\n      } else if (!res.ok) {\n        alert('Fehler beim Speichern.');\n        return;\n      } else {\n        alert('Trainingseinheit gespeichert!');\n      }\n      const updated = await fetch('http://localhost:3001/trainingUnits');\n      const data = await updated.json();\n      setSavedUnits(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleLoad = unit => {\n    setDroppedBlocks(unit.blocks);\n    setUnitName(unit.name);\n    setUnitKuerzel(unit.kuerzel);\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: /*#__PURE__*/_jsxDEV(SavedUnits, {\n          savedUnits: savedUnits,\n          onLoad: handleLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"main-title\",\n          children: [\"Trainingseinheit \", sumText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unit-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: unitName,\n              onChange: e => setUnitName(e.target.value),\n              className: \"info-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"K\\xFCrzel:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: unitKuerzel,\n              onChange: handleKuerzelChange,\n              className: \"info-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"save-button\",\n            children: \"Speichern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropArea, {\n          blocks: droppedBlocks,\n          parentId: null,\n          onDelete: handleDelete,\n          onMove: handleMove,\n          onUpdateOptions: handleUpdateOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          availableBlocks: availableBlocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yFFnkv8Doz1m55fHePvF/9eT31Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DndContext","Sidebar","DropArea","SavedUnits","jsxDEV","_jsxDEV","availableBlocks","id","label","options","type","unitOptions","dropdown","repetitions","createNewBlock","block","instanceId","newOptions","includes","selectedUnit","value","notiz","selectedDropdown","children","addBlockToTree","blocks","parentId","newBlock","map","b","deleteBlockFromTree","filter","moveBlockInArray","arr","direction","index","findIndex","newIndex","length","newArr","moveBlockInTree","updateBlockOptionsInTree","computeSums","distance","time","forEach","reps","childSums","val","parseFloat","App","_s","droppedBlocks","setDroppedBlocks","instanceCounter","setInstanceCounter","unitName","setUnitName","unitKuerzel","setUnitKuerzel","savedUnits","setSavedUnits","fetch","then","res","json","data","catch","err","console","error","handleDragEnd","event","over","active","dropAreaId","replace","newInstanceId","current","prev","handleDelete","handleMove","handleUpdateOptions","sums","sumText","handleKuerzelChange","e","target","handleSave","trainingUnit","name","kuerzel","method","headers","body","JSON","stringify","status","window","confirm","ok","alert","updated","handleLoad","unit","onDragEnd","className","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","onDelete","onMove","onUpdateOptions","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Documents/tpgen/trainingsplan-builder2/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DndContext } from '@dnd-kit/core';\r\nimport Sidebar from './components/Sidebar';\r\nimport DropArea from './components/DropArea';\r\nimport SavedUnits from './components/SavedUnits';\r\n\r\nconst availableBlocks = [\r\n  { \r\n    id: 'aufwaermen', \r\n    label: 'Aufwärmen', \r\n    options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } \r\n  },\r\n  { \r\n    id: 'tempolauf', \r\n    label: 'Tempolauf', \r\n    options: { \r\n      dropdown: ['1RT', '3RT', '5RT', '10RT', 'HMRT', 'MRT'], \r\n      unitOptions: [\"Distanz\", \"Zeit\"]\r\n    } \r\n  },\r\n  { \r\n    id: 'dauerlauf', \r\n    label: 'Dauerlauf', \r\n    options: { \r\n      dropdown: ['Zone 1', 'Zone 2', 'Zone 3', 'Zone 4', 'Zone 5'], \r\n      unitOptions: [\"Distanz\", \"Zeit\"]\r\n    } \r\n  },\r\n  { \r\n    id: 'gehpause', \r\n    label: 'Gehpause', \r\n    options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } \r\n  },\r\n  { \r\n    id: 'trabpause', \r\n    label: 'Trabpause', \r\n    options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } \r\n  },\r\n  { \r\n    id: 'abkuehlung', \r\n    label: 'Abkühlung', \r\n    options: { type: 'switch', unitOptions: [\"Distanz\", \"Zeit\"] } \r\n  },\r\n  { \r\n    id: 'wiederholung', \r\n    label: 'Wiederholung', \r\n    options: { repetitions: 1 } \r\n  }\r\n];\r\n\r\nfunction createNewBlock(block, instanceId) {\r\n  let newOptions = {};\r\n  if (['aufwaermen', 'gehpause', 'trabpause', 'abkuehlung'].includes(block.id)) {\r\n    newOptions = { \r\n      selectedUnit: \"Distanz\",\r\n      value: '',\r\n      unitOptions: [\"Distanz\", \"Zeit\"],\r\n      notiz: ''\r\n    };\r\n  } else if (block.id === 'tempolauf') {\r\n    newOptions = { \r\n      selectedDropdown: block.options.dropdown[0],\r\n      selectedUnit: \"Distanz\",\r\n      value: '',\r\n      dropdown: block.options.dropdown,\r\n      unitOptions: [\"Distanz\", \"Zeit\"],\r\n      notiz: ''\r\n    };\r\n  } else if (block.id === 'dauerlauf') {\r\n    newOptions = { \r\n      selectedDropdown: block.options.dropdown[0],\r\n      selectedUnit: \"Distanz\",\r\n      value: '',\r\n      dropdown: block.options.dropdown,\r\n      unitOptions: [\"Distanz\", \"Zeit\"],\r\n      notiz: ''\r\n    };\r\n  } else if (block.id === 'wiederholung') {\r\n    newOptions = { \r\n      repetitions: block.options.repetitions,\r\n      notiz: ''\r\n    };\r\n  }\r\n  return {\r\n    ...block,\r\n    instanceId,\r\n    options: newOptions,\r\n    ...(block.id === 'wiederholung' ? { children: [] } : {})\r\n  };\r\n}\r\n\r\nfunction addBlockToTree(blocks, parentId, newBlock) {\r\n  if (parentId === null) {\r\n    return [...blocks, newBlock];\r\n  }\r\n  return blocks.map(b => {\r\n    if (b.instanceId === parentId && b.id === 'wiederholung') {\r\n      return {\r\n        ...b,\r\n        children: [...(b.children || []), newBlock]\r\n      };\r\n    } else if (b.children) {\r\n      return {\r\n        ...b,\r\n        children: addBlockToTree(b.children, parentId, newBlock)\r\n      };\r\n    }\r\n    return b;\r\n  });\r\n}\r\n\r\nfunction deleteBlockFromTree(blocks, instanceId) {\r\n  return blocks.filter(b => b.instanceId !== instanceId).map(b => {\r\n    if (b.children) {\r\n      return { ...b, children: deleteBlockFromTree(b.children, instanceId) };\r\n    }\r\n    return b;\r\n  });\r\n}\r\n\r\nfunction moveBlockInArray(arr, instanceId, direction) {\r\n  const index = arr.findIndex(b => b.instanceId === instanceId);\r\n  if (index === -1) return arr;\r\n  const newIndex = index + direction;\r\n  if (newIndex < 0 || newIndex >= arr.length) return arr;\r\n  const newArr = [...arr];\r\n  [newArr[index], newArr[newIndex]] = [newArr[newIndex], newArr[index]];\r\n  return newArr;\r\n}\r\n\r\nfunction moveBlockInTree(blocks, instanceId, direction) {\r\n  const index = blocks.findIndex(b => b.instanceId === instanceId);\r\n  if (index !== -1) {\r\n    return moveBlockInArray(blocks, instanceId, direction);\r\n  }\r\n  return blocks.map(b => {\r\n    if (b.children) {\r\n      return { ...b, children: moveBlockInTree(b.children, instanceId, direction) };\r\n    }\r\n    return b;\r\n  });\r\n}\r\n\r\nfunction updateBlockOptionsInTree(blocks, instanceId, newOptions) {\r\n  return blocks.map(b => {\r\n    if (b.instanceId === instanceId) {\r\n      return { ...b, options: { ...b.options, ...newOptions } };\r\n    }\r\n    if (b.children) {\r\n      return { ...b, children: updateBlockOptionsInTree(b.children, instanceId, newOptions) };\r\n    }\r\n    return b;\r\n  });\r\n}\r\n\r\nfunction computeSums(blocks) {\r\n  let distance = 0, time = 0;\r\n  blocks.forEach(block => {\r\n    if (block.id === 'wiederholung') {\r\n      const reps = block.options.repetitions || 1;\r\n      const childSums = computeSums(block.children || []);\r\n      distance += childSums.distance * reps;\r\n      time += childSums.time * reps;\r\n    } else {\r\n      const val = parseFloat(block.options.value) || 0;\r\n      if (block.options.selectedUnit === \"Distanz\") {\r\n        distance += val;\r\n      } else if (block.options.selectedUnit === \"Zeit\") {\r\n        time += val;\r\n      }\r\n    }\r\n  });\r\n  return { distance, time };\r\n}\r\n\r\nfunction App() {\r\n  const [droppedBlocks, setDroppedBlocks] = useState([]);\r\n  const [instanceCounter, setInstanceCounter] = useState(0);\r\n  const [unitName, setUnitName] = useState('');\r\n  const [unitKuerzel, setUnitKuerzel] = useState('');\r\n  const [savedUnits, setSavedUnits] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/trainingUnits')\r\n      .then(res => res.json())\r\n      .then(data => setSavedUnits(data))\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  const handleDragEnd = (event) => {\r\n    const { over, active } = event;\r\n    if (!over) return;\r\n    const dropAreaId = over.id;\r\n    let parentId = null;\r\n    if (dropAreaId !== 'drop-area') {\r\n      parentId = dropAreaId.replace('drop-area-', '');\r\n    }\r\n    const newInstanceId = `inst-${instanceCounter}`;\r\n    const newBlock = createNewBlock(active.data.current.block, newInstanceId);\r\n    setDroppedBlocks(prev => addBlockToTree(prev, parentId, newBlock));\r\n    setInstanceCounter(prev => prev + 1);\r\n  };\r\n\r\n  const handleDelete = (instanceId) => {\r\n    setDroppedBlocks(prev => deleteBlockFromTree(prev, instanceId));\r\n  };\r\n\r\n  const handleMove = (instanceId, direction) => {\r\n    setDroppedBlocks(prev => moveBlockInTree(prev, instanceId, direction));\r\n  };\r\n\r\n  const handleUpdateOptions = (instanceId, newOptions) => {\r\n    setDroppedBlocks(prev => updateBlockOptionsInTree(prev, instanceId, newOptions));\r\n  };\r\n\r\n  const sums = computeSums(droppedBlocks);\r\n  const sumText = `(${sums.distance}km + ${sums.time}min)`;\r\n\r\n  const handleKuerzelChange = (e) => {\r\n    setUnitKuerzel(e.target.value.replace(/\\s/g, ''));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const trainingUnit = {\r\n      name: unitName,\r\n      kuerzel: unitKuerzel,\r\n      blocks: droppedBlocks\r\n    };\r\n    try {\r\n      let res = await fetch('http://localhost:3001/trainingUnits', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(trainingUnit)\r\n      });\r\n      if (res.status === 409) {\r\n        const data = await res.json();\r\n        if (window.confirm('Eine Einheit mit diesem Kürzel existiert bereits. Überschreiben?')) {\r\n          res = await fetch(`http://localhost:3001/trainingUnits/${data.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(trainingUnit)\r\n          });\r\n          if (!res.ok) {\r\n            alert('Fehler beim Überschreiben.');\r\n            return;\r\n          }\r\n          alert('Trainingseinheit überschrieben!');\r\n        } else {\r\n          return;\r\n        }\r\n      } else if (!res.ok) {\r\n        alert('Fehler beim Speichern.');\r\n        return;\r\n      } else {\r\n        alert('Trainingseinheit gespeichert!');\r\n      }\r\n      const updated = await fetch('http://localhost:3001/trainingUnits');\r\n      const data = await updated.json();\r\n      setSavedUnits(data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const handleLoad = (unit) => {\r\n    setDroppedBlocks(unit.blocks);\r\n    setUnitName(unit.name);\r\n    setUnitKuerzel(unit.kuerzel);\r\n  };\r\n\r\n  return (\r\n    <DndContext onDragEnd={handleDragEnd}>\r\n      <div className=\"app-container\">\r\n        <div className=\"left-panel\">\r\n          <SavedUnits savedUnits={savedUnits} onLoad={handleLoad} />\r\n        </div>\r\n        <div className=\"middle-panel\">\r\n          <h3 className=\"main-title\">\r\n            Trainingseinheit {sumText}\r\n          </h3>\r\n          <div className=\"unit-info\">\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                value={unitName}\r\n                onChange={(e) => setUnitName(e.target.value)}\r\n                className=\"info-input\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Kürzel:\r\n              <input\r\n                type=\"text\"\r\n                value={unitKuerzel}\r\n                onChange={handleKuerzelChange}\r\n                className=\"info-input\"\r\n              />\r\n            </label>\r\n            <button onClick={handleSave} className=\"save-button\">\r\n              Speichern\r\n            </button>\r\n          </div>\r\n          <DropArea \r\n            blocks={droppedBlocks} \r\n            parentId={null}\r\n            onDelete={handleDelete}\r\n            onMove={handleMove}\r\n            onUpdateOptions={handleUpdateOptions}\r\n          />\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <Sidebar availableBlocks={availableBlocks} />\r\n        </div>\r\n      </div>\r\n    </DndContext>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}